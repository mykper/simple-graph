{"version":3,"sources":["GraphEntity.js","components/GraphContext.js","Actions.js","components/VerticalControlGroup.js","components/ControlGroup.js","components/GridMarker.js","components/GraphView.js","App.js","serviceWorker.js","index.js"],"names":["Domain","boundary","this","set","Set","Array","keys","forEach","y","x","add","hash","maxValue","maxSquared","index","i0","i1","Math","min","GraphEntity","domain","pattern","vertices","Map","edges","adjList","label","has","addToAdj","index0","index1","list","get","push","edgeHash","vertex","dy","dx","revHash","neighborIndex","_","revEdgeHash","v0","v1","components","visited","length","component","search","neighbors","dist","distRnd","s","reduce","sum","p","abs","console","debug","Error","nonZeroIndices","map","filter","nonZeroDist","cumulitiveSum","fill","acc","rnd","random","nonZeroIndex","findIndex","value","slice","createDiscreteRandom","degree","addVertex","allEdgesSet","getNeighborList","allEdges","array","i","j","floor","shuffle","hasCapacity","edgeIndex","addEdge","GraphContext","React","createContext","ACTIONS","UPDATE_DIST","CREATE_GRAPH","VerticalControlGroup","useContext","state","dispatch","className","Slider","max","step","key","style","gridColumn","gridRow","margin","orientation","control","onChange","v","type","payload","StyledButton","withStyles","root","borderRadius","border","height","padding","fontSize","textTransform","Button","ControlGroup","Typography","variant","onClick","GridMarker","r","x1","x2","y1","y2","strokeWidth","transform","offset","InnerGraphView","memo","graph","indexToPosition","grid","getDomainList","getEdgeList","getComponents","sort","c0","c1","c","vertexCompomentMap","flat","nodes","getVertexList","pos","width","viewBox","cx","cy","GraphView","theme","createMuiTheme","palette","primary","main","amber","typography","fontFamily","reducer","action","delta","a","construct","App","useReducer","undefined","delete","ThemeProvider","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.572c4bb2.chunk.js","sourcesContent":["class Domain {\n  constructor(boundary) {\n    this.set = new Set();\n    [...Array(boundary).keys()].forEach((y) =>\n      [...Array(boundary).keys()].forEach((x) => {\n        this.set.add(this.hash([y, x]));\n      })\n    );\n    this.maxValue = boundary;\n    this.maxSquared = boundary ** 2;\n  }\n\n  hash([y, x]) {\n    if (y < 0 || x < 0) return -1;\n    if (y > this.maxValue - 1 || x > this.maxValue - 1) return -1;\n    return (y * 10 + x) | 0;\n  }\n\n  revHash(index) {\n    return [(index / this.maxValue) | 0, index % this.maxValue];\n  }\n\n  edgeHash(i0, i1) {\n    return Math.min(i1 * this.maxSquared + i0, i0 * this.maxSquared + i1) | 0;\n  }\n\n  revEdgeHash(index) {\n    return [(index / this.maxSquared) | 0, index % this.maxSquared];\n  }\n}\n\nconst EPSILON = 0.001;\n\nconst createDiscreteRandom = (dist) => {\n  const s = dist.reduce((sum, p) => sum + p, 0);\n  if (Math.abs(1 - s) > EPSILON) {\n    console.debug(s);\n    throw new Error(\"Probability mass function doesn't sum to one.\");\n  }\n  const nonZeroIndices = dist\n    .map((p, index) => (p > 0 ? index : -1))\n    .filter((index) => index > -1);\n  const nonZeroDist = nonZeroIndices.map((index) => dist[index]);\n  const cumulitiveSum = new Array(nonZeroDist.length).fill(0);\n  let acc = 0;\n  nonZeroDist.forEach((p, index) => {\n    acc += p;\n    cumulitiveSum[index] = acc;\n  });\n  return () => {\n    const rnd = Math.random();\n    const nonZeroIndex = cumulitiveSum.findIndex((value) => rnd - value <= 0);\n    return nonZeroIndex === -1\n      ? nonZeroIndices.slice(-1)\n      : nonZeroIndices[nonZeroIndex];\n  };\n};\n\nclass GraphEntity {\n  constructor(domain, pattern) {\n    this.vertices = new Map();\n    this.edges = new Set();\n    this.adjList = new Map();\n    this.domain = domain;\n    this.pattern = pattern;\n  }\n\n  addVertex(index, label = -1) {\n    if (this.vertices.has(index)) return;\n    this.vertices.set(index, label);\n    this.addToAdj(index);\n  }\n\n  addToAdj(index0, index1 = null) {\n    let list = [];\n    if (this.adjList.has(index0)) {\n      list = this.adjList.get(index0);\n    }\n    if (index1 !== null) {\n      list.push(index1);\n    }\n    this.adjList.set(index0, list);\n  }\n\n  addEdge(index0, index1) {\n    const index = this.domain.edgeHash(index0, index1);\n    if (this.edges.has(index)) return;\n    this.edges.add(index, true);\n    this.addToAdj(index0, index1);\n    this.addToAdj(index1, index0);\n  }\n\n  getNeighborList(vertex) {\n    const list = [];\n    this.pattern.forEach(([dy, dx]) => {\n      let [y, x] = this.domain.revHash(vertex);\n      y += dy;\n      x += dx;\n      const neighborIndex = this.domain.hash([y, x]);\n      if (!this.domain.set.has(neighborIndex)) return; //Cell is outside of the domain\n      if (this.vertices.has(neighborIndex)) list.push(neighborIndex);\n    });\n    return list;\n  }\n\n  getDomainList() {\n    const list = [];\n    this.domain.set.forEach((index) => {\n      list.push(index);\n    });\n    return list;\n  }\n\n  getVertexList() {\n    const list = [];\n    this.vertices.forEach((_, index) => {\n      list.push(index);\n    });\n    return list;\n  }\n\n  getEdgeList() {\n    const list = [];\n    this.edges.forEach((index) => {\n      const [v0, v1] = this.domain.revEdgeHash(index);\n      list.push([this.domain.revHash(v0), this.domain.revHash(v1)]);\n    });\n    return list;\n  }\n\n  getComponents() {\n    const components = [];\n    const visited = new Set();\n\n    const search = (neighbors, component) => {\n      neighbors.forEach((vertex) => {\n        if (visited.has(vertex)) return;\n        visited.add(vertex);\n        component.push(vertex);\n        search(this.adjList.get(vertex), component);\n      });\n    };\n\n    this.adjList.forEach((list, vertex) => {\n      if (visited.has(vertex)) return;\n      if (list.length === 0) {\n        visited.add(vertex);\n        components.push([vertex]);\n      } else {\n        const component = [vertex];\n        components.push(component);\n        visited.add(vertex);\n        search(list, component);\n      }\n    });\n    return components;\n  }\n\n  construct(dist) {\n    function shuffle(array) {\n      for (let i = array.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [array[i], array[j]] = [array[j], array[i]];\n      }\n    }\n\n    const distRnd = createDiscreteRandom(dist);\n\n    this.domain.set.forEach((index) => {\n      const degree = distRnd();\n      this.addVertex(index, degree);\n    });\n\n    const allEdgesSet = new Set();\n\n    this.vertices.forEach((_, index) => {\n      const neighbors = this.getNeighborList(index);\n      neighbors.forEach((neighborIndex) =>\n        allEdgesSet.add(this.domain.edgeHash(index, neighborIndex))\n      );\n    });\n\n    const allEdges = [...allEdgesSet.keys()];\n    shuffle(allEdges);\n\n    const hasCapacity = (index) =>\n      this.adjList.get(index).length < this.vertices.get(index);\n\n    allEdges.forEach((edgeIndex) => {\n      const [i0, i1] = this.domain.revEdgeHash(edgeIndex);\n      if (hasCapacity(i0) && hasCapacity(i1)) {\n        this.addEdge(i0, i1);\n      }\n    });\n  }\n}\n\nexport { Domain, GraphEntity };\n","import React from \"react\";\n\nexport const GraphContext = React.createContext(null);\n","const ACTIONS = {\n  UPDATE_DIST: 0,\n  CREATE_GRAPH: 1,\n};\n\nexport default ACTIONS;\n","import React, { useContext } from \"react\";\nimport { Slider } from \"@material-ui/core\";\nimport { GraphContext } from \"./GraphContext\";\nimport ACTIONS from \"../Actions\";\n\nexport const VerticalControlGroup = () => {\n  const { state, dispatch } = useContext(GraphContext);\n  return (\n    <div className=\"vertical-control-group\">\n      {[...Array(5).keys()].map((value) => {\n        return (\n          <Slider\n            max={1}\n            step={0.001}\n            key={value}\n            style={{\n              gridColumn: value + 2,\n              gridRow: 1,\n              margin: \"auto\",\n            }}\n            orientation=\"vertical\"\n            value={state.control[value]}\n            onChange={(_, v) => {\n              dispatch({\n                type: ACTIONS.UPDATE_DIST,\n                payload: { index: value, value: v },\n              });\n            }}\n          />\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Button, Typography, withStyles } from \"@material-ui/core\";\nimport { GraphContext } from \"./GraphContext\";\nimport ACTIONS from \"../Actions\";\nimport { VerticalControlGroup } from \"./VerticalControlGroup\";\n\nconst title = \"simple-graph\";\n\nconst StyledButton = withStyles({\n  root: {\n    borderRadius: 3,\n    border: 0,\n    height: \"2rem\",\n    padding: \"0 32px\",\n    fontSize: \"1.5rem\",\n  },\n  label: {\n    textTransform: \"capitalize\",\n  },\n})(Button);\n\nfunction ControlGroup() {\n  const { dispatch } = useContext(GraphContext);\n  return (\n    <div className=\"control-group\">\n      <Typography className=\"control-title\" variant=\"h3\">\n        {title}\n      </Typography>\n      <VerticalControlGroup />\n      <div>\n        <StyledButton\n          variant=\"contained\"\n          onClick={() =>\n            dispatch({ type: ACTIONS.CREATE_GRAPH, payload: null })\n          }\n        >\n          Create\n        </StyledButton>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlGroup;\n","import React from \"react\";\n\nconst markerRadius = 0.005;\n\nconst GridMarker = ({ y, x }) => {\n  const r = (Math.random() * 90) | 0;\n  return (\n    <>\n      <line\n        className=\"marker-line\"\n        x1={x + markerRadius}\n        x2={x - markerRadius}\n        y1={y + markerRadius}\n        y2={y - markerRadius}\n        strokeWidth={0.0025}\n        transform={`rotate(${r} ${x} ${y})`}\n      />\n      <line\n        className=\"marker-line\"\n        x1={x + markerRadius}\n        x2={x - markerRadius}\n        y1={y - markerRadius}\n        y2={y + markerRadius}\n        strokeWidth={0.0025}\n        transform={`rotate(${r} ${x} ${y})`}\n      />\n    </>\n  );\n};\n\nexport default GridMarker;\n","import React, { useContext } from \"react\";\nimport GridMarker from \"./GridMarker\";\nimport { GraphContext } from \"./GraphContext\";\n\nconst offset = { x: 0.1, y: 0.1 };\nconst step = { x: 0.1, y: 0.1 };\nconst nodeRadius = 0.03;\n\nexport const InnerGraphView = React.memo(({ graph }) => {\n  const indexToPosition = ([y, x]) => [\n    offset.y + y * step.y,\n    offset.x + x * step.x,\n  ];\n  const grid = graph\n    .getDomainList()\n    .map((index) => indexToPosition(graph.domain.revHash(index)));\n\n  const edges = graph\n    .getEdgeList()\n    .map(([v0, v1]) => [indexToPosition(v0), indexToPosition(v1)]);\n\n  //Show upto 5 components containing more than 4 vertices\n  const components = graph\n    .getComponents()\n    .sort((c0, c1) => c1.length - c0.length)\n    .filter((c) => c.length > 4)\n    .slice(0, 5);\n\n  const vertexCompomentMap = new Map(\n    components.map((c, i) => c.map((v) => [v, i])).flat()\n  );\n\n  const nodes = graph.getVertexList().map((vertex) => ({\n    pos: indexToPosition(graph.domain.revHash(vertex)),\n    label: vertexCompomentMap.get(vertex) ?? -1,\n  }));\n\n  return (\n    <div className=\"svg-grid\">\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 1.1 1.1\">\n        {\n          //Grid markers\n          nodes.length === 0 &&\n            grid.map(([y, x], index) => <GridMarker key={index} y={y} x={x} />)\n        }\n        {\n          //Grid edges\n          edges.map(([v0, v1], index) => {\n            return (\n              <line\n                className=\"edge-line\"\n                key={index}\n                x1={v0[1]}\n                x2={v1[1]}\n                y1={v0[0]}\n                y2={v1[0]}\n                strokeWidth={0.025}\n              />\n            );\n          })\n        }\n        {\n          //Grid vertices\n          nodes.map(({ pos: [y, x], label }, index) => {\n            return (\n              <circle\n                className={`graph-node label-${label + 1}`}\n                key={index}\n                cx={x}\n                cy={y}\n                r={nodeRadius}\n              />\n            );\n          })\n        }\n      </svg>\n    </div>\n  );\n});\n\nexport const GraphView = () => {\n  const { state } = useContext(GraphContext);\n  return <InnerGraphView graph={state.graph} />;\n};\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport { Typography, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport { Domain, GraphEntity } from \"./GraphEntity\";\nimport { GraphContext } from \"./components/GraphContext\";\nimport ACTIONS from \"./Actions\";\nimport ControlGroup from \"./components/ControlGroup\";\nimport { GraphView } from \"./components/GraphView\";\nimport { amber } from \"@material-ui/core/colors\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: amber[100],\n    },\n  },\n  typography: {\n    fontFamily: [\"Teko\", \"sans-serif\"],\n  },\n});\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.UPDATE_DIST: {\n      const { index, value } = action.payload;\n      let delta = value - state.control[index];\n      let a = [...state.control];\n      a[index] = 0;\n      let sum = a.reduce((s, p) => s + p, 0);\n      if (sum !== 0) {\n        a = a.map((p) => p * (1 - delta / sum));\n        a[index] = value;\n      } else {\n        a = a.map((x) => -delta / 4);\n        a[index] = value;\n      }\n      return { ...state, control: a };\n    }\n    case ACTIONS.CREATE_GRAPH: {\n      const graph = new GraphEntity(state.graph.domain, state.graph.pattern);\n      graph.construct(state.control);\n      return { ...state, graph: graph };\n    }\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  function init() {\n    const domain = new Domain(10);\n    [...Array(4).keys()].forEach((y) => {\n      [...Array(4).keys()].forEach((x) => {\n        const index = domain.hash([y + 3, x + 3]);\n        if (domain.set.has(index)) {\n          domain.set.delete(index);\n        }\n      });\n    });\n\n    const pattern = [\n      [0, -1],\n      [-1, 0],\n      [0, 1],\n      [1, 0],\n    ];\n\n    const dist = [0.0, 0.2, 0.5, 0.25, 0.05];\n\n    return { graph: new GraphEntity(domain, pattern), control: dist };\n  }\n\n  const [state, dispatch] = useReducer(reducer, undefined, init);\n\n  return (\n    <div className=\"app\">\n      <ThemeProvider theme={theme}>\n        <div className=\"column\">\n          <div className=\"container\">\n            <GraphContext.Provider value={{ state, dispatch }}>\n              <GraphView />\n              <div className=\"logo\">\n                <Typography variant=\"h1\">SG</Typography>\n              </div>\n              <ControlGroup />\n            </GraphContext.Provider>\n          </div>\n          <footer>\n            <Typography className=\"copy\" variant=\"body1\">\n              © 2020 mykper\n            </Typography>\n          </footer>\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}